basePath: /
definitions:
  models.CreateCategoryRequest:
    properties:
      name:
        type: string
      slug:
        type: string
    type: object
  models.CreatePostRequest:
    properties:
      body:
        type: string
      category_ids:
        items:
          type: string
        type: array
      status:
        type: string
      tags:
        items:
          type: string
        type: array
      title:
        type: string
    type: object
  models.CreateUpdateCategoryResponse:
    properties:
      id:
        type: string
      name:
        type: string
      slug:
        type: string
    type: object
  models.CreateUpdatePostResponse:
    properties:
      created_at:
        type: string
      id:
        type: string
      status:
        type: string
      title:
        type: string
      updated_at:
        type: string
    type: object
  models.LoginRequest:
    properties:
      email:
        type: string
      password:
        type: string
    type: object
  models.LoginResponse:
    properties:
      token:
        type: string
    type: object
  models.RegisterRequest:
    properties:
      email:
        type: string
      name:
        type: string
      password:
        type: string
    type: object
  models.RegisterResponse:
    properties:
      created_at:
        type: string
      email:
        type: string
      id:
        type: string
      name:
        type: string
      role:
        type: string
    type: object
host: localhost:8080
info:
  contact: {}
  description: This is a simple API with JWT Auth, RBAC, and Clean Architecture.
  title: Go Simple CMS API
  version: "1.0"
paths:
  /api/v1/admin/categories:
    get:
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.CreateUpdateCategoryResponse'
            type: array
        "401":
          description: Unauthorized
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: Get all categories
      tags:
      - Manage Categories
    post:
      consumes:
      - application/json
      description: Create a new category
      parameters:
      - description: Category data
        in: body
        name: users
        required: true
        schema:
          $ref: '#/definitions/models.CreateCategoryRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.CreateUpdateCategoryResponse'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Create a new category
      tags:
      - Manage Categories
  /api/v1/admin/posts:
    post:
      consumes:
      - application/json
      description: Create a new post
      parameters:
      - description: Post data
        in: body
        name: users
        required: true
        schema:
          $ref: '#/definitions/models.CreatePostRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.CreateUpdatePostResponse'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Create a new post
      tags:
      - Manage Posts
  /login:
    post:
      consumes:
      - application/json
      description: Create a new users account
      parameters:
      - description: User login
        in: body
        name: users
        required: true
        schema:
          $ref: '#/definitions/models.LoginRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.LoginResponse'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Login users
      tags:
      - Auth
  /register:
    post:
      consumes:
      - application/json
      description: Create a new users account
      parameters:
      - description: User registration data
        in: body
        name: users
        required: true
        schema:
          $ref: '#/definitions/models.RegisterRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.RegisterResponse'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Register a new users
      tags:
      - Auth
securityDefinitions:
  BearerAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
